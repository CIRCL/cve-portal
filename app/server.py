#!/usr/bin/env python2
# -*-coding:UTF-8 -*

import ConfigParser
from flask import Flask, render_template, request, flash, redirect, url_for
from flask.ext.bootstrap import Bootstrap
from flask.ext.sqlalchemy import SQLAlchemy

import form_class

# Parsing Conf File #
configfile = 'config/config.cfg'
cfg = ConfigParser.ConfigParser()
cfg.read(configfile)

# Flask app, bootstrap etc. #
app = Flask(__name__)
bootstrap = Bootstrap(app)
app.config['SECRET_KEY'] = cfg.get("Secret", "wtf_secret_key")

db_type = cfg.get('Database', 'type')
db_user = cfg.get('Database', 'user')
db_pwd = cfg.get('Database', 'password')
db_hostname = cfg.get('Database', 'hostname')
db_name = cfg.get('Database', 'db_name')

app.config['SQLALCHEMY_DATABASE_URI'] = db_type+'://'+db_user+':'+db_pwd+'@'+db_hostname+'/'+db_name
app.config['SQLALCHEMY_COMMIT_ON_TEARDOWN'] = True

db = SQLAlchemy(app)

import models

#### ROUTES ####
@app.route('/', methods=['GET', 'POST'])
def index():
    return render_template("index.html")

@app.route('/register', methods=['GET', 'POST'])
def register():
    form = form_class.RegistrationForm()
    if form.validate_on_submit():
        user = models.User(email=form.email.data,
                name=form.name.data,
                affiliation=form.affiliation.data,
                pgp=form.pgp.data,
                password=form.password.data)
        db.session.add(user)
        flash('You can now login.')
        return redirect('/') # soon login
    return render_template("auth/register.html", form=form)


@app.errorhandler(404)
def page_not_found(e):
    return render_template('404.html'), 404


@app.errorhandler(500)
def internal_server_error(e):
    return render_template('500.html'), 500


@app.route('/user')
def user():
    user_agent = request.headers.get('User-Agent')
    return "<h1>Hello %s !</h1>" % user_agent

if __name__ == "__main__":
    app.run(host='127.0.0.1', port=5001, threaded=True, debug=True)
