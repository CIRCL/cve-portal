#!/usr/bin/env python2
# -*-coding:UTF-8 -*

import ConfigParser
from flask import Flask
from flask.ext.bootstrap import Bootstrap
from flask.ext.sqlalchemy import SQLAlchemy

# Parsing Conf File #
configfile = 'config/config.cfg'
cfg = ConfigParser.ConfigParser()
cfg.read(configfile)

# Flask app, bootstrap etc. #
app = Flask(__name__)
bootstrap = Bootstrap(app)
app.config['SECRET_KEY'] = cfg.get("Secret", "wtf_secret_key")

db_type = cfg.get('Database', 'type')
db_user = cfg.get('Database', 'user')
db_pwd = cfg.get('Database', 'password')
db_hostname = cfg.get('Database', 'hostname')
db_name = cfg.get('Database', 'db_name')

app.config['SQLALCHEMY_DATABASE_URI'] = db_type+'://'+db_user+':'+db_pwd+'@'+db_hostname+'/'+db_name
app.config['SQLALCHEMY_COMMIT_ON_TEARDOWN'] = True

db = SQLAlchemy(app)

class User(db.Model):
    __tablename__ = 'users'
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(64), unique=True, index=True)
    email = db.Column(db.String(64), unique=True, index=True)
    #password_hash = db.Column(db.String(128))
    password = db.Column(db.String(128))
    affiliation = db.Column(db.String(64), index=True, nullable=True)
    pgp = db.Column(db.Text, unique=True, nullable=True)
    confirmed = db.Column(db.Boolean, default=False)

